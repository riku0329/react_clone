{"ast":null,"code":"var _jsxFileName = \"/Users/riku/Desktop/project/react-clone/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { updataCollections } from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.conponent\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updataCollections = this.props.updataCollections;\n    const collectionRef = firestore.collection(\"collections\");\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updataCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchProps = dispatch => ({\n  updataCollections: collectionMap => dispatch(updataCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchProps)(ShopPage);","map":{"version":3,"sources":["/Users/riku/Desktop/project/react-clone/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updataCollections","WithSpinner","CollectionsOverviewWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","setState","render","match","path","mapDispatchProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACL,mBAAD,CAAlD;;AACA,MAAMO,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVR,iBADU,GACY,KAAKS,KADjB,CACVT,iBADU;AAElB,UAAMU,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACxE,YAAMC,aAAa,GAAGf,+BAA+B,CAACc,QAAD,CAArD;AACAb,MAAAA,iBAAiB,CAACc,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJ8B,CAA/B;AAKD;;AACDU,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKR,KADhB,CACCQ,KADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEtB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKqB,KAAK,CAACC,IAAX,mBADN;AAEE,MAAA,SAAS,EAAErB,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AASD;;AA5BoC;;AA+BvC,MAAMsB,gBAAgB,GAAGC,QAAQ,KAAK;AACpCpB,EAAAA,iBAAiB,EAAEc,aAAa,IAAIM,QAAQ,CAACpB,iBAAiB,CAACc,aAAD,CAAlB;AADR,CAAL,CAAjC;;AAIA,eAAenB,OAAO,CAAC,IAAD,EAAOwB,gBAAP,CAAP,CAAgChB,QAAhC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from \"../../firebase/firebase.utils\";\nimport { updataCollections } from \"../../redux/shop/shop.actions\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.conponent\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nclass ShopPage extends React.Component {\n  state = {\n    loading: true\n  };\n\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updataCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updataCollections(collectionMap);\n      this.setState({ loading: false });\n    });\n  }\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchProps = dispatch => ({\n  updataCollections: collectionMap => dispatch(updataCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}