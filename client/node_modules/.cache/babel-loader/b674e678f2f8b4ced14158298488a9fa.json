{"ast":null,"code":"var _jsxFileName = \"/Users/riku/Desktop/project/react-clone/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimpor;\nimport CollectionPage from \"../collection/collection.component\";\nimport { fetchCollectionsAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.conponent\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsAsync = this.props.fetchCollectionsAsync;\n    fetchCollectionsAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchProps = dispatch => ({\n  fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchProps)(ShopPage);","map":{"version":3,"sources":["/Users/riku/Desktop/project/react-clone/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","impor","CollectionPage","fetchCollectionsAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","WithSpinner","CollectionsOverviewWithSpinner","CollectionsOverview","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionsLoaded","path","mapStateToProps","mapDispatchProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEAC,KAAK;AACL,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SACEC,0BADF,EAEEC,yBAFF,QAGO,iCAHP;AAKA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACE,mBAAD,CAAlD;AACA,MAAMC,yBAAyB,GAAGH,WAAW,CAACJ,cAAD,CAA7C;;AACA,MAAMQ,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVT,qBADU,GACgB,KAAKU,KADrB,CACVV,qBADU;AAElBA,IAAAA,qBAAqB;AACtB;;AACDW,EAAAA,MAAM,GAAG;AAAA,wBACsD,KAAKD,KAD3D;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQC,oBADR,eACQA,oBADR;AAAA,UAC8BC,mBAD9B,eAC8BA,mBAD9B;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKF,KAAK,CAACG,IAAX,CAFN;AAGE,MAAA,MAAM,EAAEL,KAAK,IACX,oBAAC,8BAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKE,KAAK,CAACG,IAAX,mBADN;AAEE,MAAA,MAAM,EAAEL,KAAK,IACX,oBAAC,yBAAD;AACE,QAAA,SAAS,EAAE,CAACI;AADd,SAEMJ,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAuBD;;AA9BoC;;AAiCvC,MAAMM,eAAe,GAAGpB,wBAAwB,CAAC;AAC/CiB,EAAAA,oBAAoB,EAAEZ,0BADyB;AAE/Ca,EAAAA,mBAAmB,EAAEZ;AAF0B,CAAD,CAAhD;;AAKA,MAAMe,gBAAgB,GAAGC,QAAQ,KAAK;AACpClB,EAAAA,qBAAqB,EAAE,MAAMkB,QAAQ,CAAClB,qBAAqB,EAAtB;AADD,CAAL,CAAjC;;AAIA,eAAeH,OAAO,CAACmB,eAAD,EAAkBC,gBAAlB,CAAP,CAA2CV,QAA3C,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\n\nimpor\nimport CollectionPage from \"../collection/collection.component\";\n\nimport { fetchCollectionsAsync } from \"../../redux/shop/shop.actions\";\nimport {\n  selectIsCollectionFetching,\n  selectIsCollectionsLoaded\n} from \"../../redux/shop/shop.selectors\";\n\nimport WithSpinner from \"../../components/with-spinner/with-spinner.conponent\";\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const { fetchCollectionsAsync } = this.props;\n    fetchCollectionsAsync();\n  }\n  render() {\n    const { match, isCollectionFetching, isCollectionsLoaded } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          render={props => (\n            <CollectionsOverviewWithSpinner\n              isLoading={isCollectionFetching}\n              {...props}\n            />\n          )}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={props => (\n            <CollectionPageWithSpinner\n              isLoading={!isCollectionsLoaded}\n              {...props}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchProps = dispatch => ({\n  fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}