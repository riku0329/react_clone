{"ast":null,"code":"var _jsxFileName = \"/Users/riku/Desktop/project/react-clone/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container.component\";\nimport CollectionPageContainer from \"../collection/collection.container\";\nimport { fetchCollectionsAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionsAsync = this.props.fetchCollectionsAsync;\n    fetchCollectionsAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionsLoaded = _this$props.isCollectionsLoaded;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchProps = dispatch => ({\n  fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchProps)(ShopPage);","map":{"version":3,"sources":["/Users/riku/Desktop/project/react-clone/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsAsync","selectIsCollectionsLoaded","ShopPage","Component","componentDidMount","props","render","match","isCollectionsLoaded","path","mapStateToProps","createStructuredSelector","mapDispatchProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,4BAAP,MAAyC,gFAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC;AAEA,SAASC,qBAAT,QAAsC,+BAAtC;AACA,SAASC,yBAAT,QAA0C,iCAA1C;;AAEA,MAAMC,QAAN,SAAuBP,KAAK,CAACQ,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAAA,UACVJ,qBADU,GACgB,KAAKK,KADrB,CACVL,qBADU;AAElBA,IAAAA,qBAAqB;AACtB;;AACDM,EAAAA,MAAM,GAAG;AAAA,wBACgC,KAAKD,KADrC;AAAA,UACCE,KADD,eACCA,KADD;AAAA,UACQC,mBADR,eACQA,mBADR;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,YAAKD,KAAK,CAACE,IAAX,CAFN;AAGE,MAAA,SAAS,EAAEX,4BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,KAAD;AACE,MAAA,IAAI,YAAKS,KAAK,CAACE,IAAX,mBADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAaD;;AApBoC;;AAuBvC,MAAMC,eAAe,GAAGC,wBAAwB,CAAC;AAC/CH,EAAAA,mBAAmB,EAAEP;AAD0B,CAAD,CAAhD;;AAIA,MAAMW,gBAAgB,GAAGC,QAAQ,KAAK;AACpCb,EAAAA,qBAAqB,EAAE,MAAMa,QAAQ,CAACb,qBAAqB,EAAtB;AADD,CAAL,CAAjC;;AAIA,eAAeH,OAAO,CAACa,eAAD,EAAkBE,gBAAlB,CAAP,CAA2CV,QAA3C,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport CollectionsOverviewContainer from \"../../components/collections-overview/collections-overview.container.component\";\nimport CollectionPageContainer from \"../collection/collection.container\";\n\nimport { fetchCollectionsAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const { fetchCollectionsAsync } = this.props;\n    fetchCollectionsAsync();\n  }\n  render() {\n    const { match, isCollectionsLoaded } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionsOverviewContainer}\n        />\n        <Route\n          path={`${match.path}/:collectionId`}\n          \n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchProps = dispatch => ({\n  fetchCollectionsAsync: () => dispatch(fetchCollectionsAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}